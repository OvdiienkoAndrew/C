#include <iostream> // Підключаємо бібліотека для вводу й виводу тексту на консоль.
using namespace std; // Вказуємо, який простір імен.
int main() // Програма на С++ починається із виконання функції main.
{
    int N, q=-1, w=1; // Оголошуємо змінні 'N', 'q' приймає значення мінус один, 'w' приймає значення 1.
    cout << "\nEnter the number of array elements: "; // Нова строка, виводимо на консоль символи.
    cin >> N; // Вводимо числo 'N'.
    while (N<=0) // Якщо 'N' недодатне.
    {
        cout << "\nPlease re-enter the number of array elements: "; // Нова строка, виводимо на консоль символи.
        cin >> N; // Вводимо числo 'N'.
    }
    int A[N], B[N]; // Оголошуємо масиви з 'N' кількістю елементів: 'A', 'B'.
    cout << "\nEnter array elements A:\n"; // Нова строка, виводимо на консоль символи, нова строка.
    for (int n=0; n<N; n++) // Оголошуємо змінну 'n', яка приймає значення нуль, поки 'n' строго менше 'N' i доки до 'n' додається 1 в кінці циклу. 
    {
        cout << "A[" << n << "] = "; // Виводимо на консоль символи, виводимо значення 'n', виводимо на консоль символи.
        cin >> A[n]; // Вводимо значення масиву 'A' відносно 'n'.
    }
    cout << "\nEnter array elements B:\n"; // Нова строка, виводимо на консоль символи, нова строка.
    for (int n=0; n<N; n++) // Оголошуємо змінну 'n', яка приймає значення нуль, поки 'n' строго менше 'N' i доки до 'n' додається 1 в кінці циклу. 
    {
        cout << "B[" << n << "] = "; // Виводимо на консоль символи, виводимо значення 'n', виводимо на консоль символи.
        cin >> B[n]; // Вводимо значення масиву 'B' відносно 'n'.
    }
    cout << endl; // Нова строка.
    cout << "\nArray elements A:\n"; // Нова строка, виводимо на консоль символи, нова строка.
    for (int n=0; n<N; n++) // Оголошуємо змінну 'n', яка приймає значення нуль, поки 'n' строго менше 'N' i доки до 'n' додається 1 в кінці циклу. 
    {
        cout << "A[" << n << "] = " << A[n] << "\n"; // Виводимо на консоль символи, виводимо значення 'n', виводимо на консоль символи, виводимо значення масиву 'A' відносно 'n', нова строка.
    }
    cout << "\nArray elements B:\n"; // Нова строка, виводимо на консоль символи, нова строка.
    for (int n=0; n<N; n++) // Оголошуємо змінну 'n', яка приймає значення нуль, поки 'n' строго менше 'N' i доки до 'n' додається 1 в кінці циклу. 
    {
        cout << "B[" << n << "] = " << B[n] << "\n"; // Виводимо на консоль символи, виводимо значення 'n', виводимо на консоль символи, виводимо значення масиву 'B' відносно 'n', нова строка.
    }
    cout << endl; // Нова строка.
    int countA=sizeof(A)/sizeof(A[0]); // Оголошуємо кількість елементів масиву 'A'.
    int countB=sizeof(B)/sizeof(B[0]); // Оголошуємо кількість елементів масиву 'B'.
    int countC=countB+countA; // Оголошуємо кількість елементів масиву 'C', яка дорівнює сумі уількості елементів масиву 'B' та 'A'.
    int countD=countB+countA;  // Оголошуємо кількість елементів масиву 'D', яка дорівнює сумі уількості елементів масиву 'B' та 'A'.
    int C[countC]; // Оголошуємо масив 'C' з 'couuntC' кількістю елементів.
    int D[countD]; // Оголошуємо масив 'D' з 'couuntD' кількістю елементів.
    for (int k=0; k<countC; k++) // Оголошуємо змінну 'k' та присвоюємо нуль, поки 'k' строго менше кількості елементів масиву 'C', додаємо до 'k' одиницю в кінці циклу.
    {
        if (k<countA) // Якщо 'k' строго менше кількості елементів у масиві 'A'.
        {
            C[k]=A[k]; // Масив 'C' відносно 'k', приймає значення масиву 'A', відносно 'k'.
        }
        else // Інакше.
        {
            int q=k-countA; // Оголошуємо змінну 'q', якій надаємо значення різниці 'k' та кількості елементів масиву 'A'. 
            C[k]=B[q]; // Масив 'C' , відносно 'k', приймає значення масиву 'B', відносно 'q'.
        }
    }
    for (int i=1; i<countC; ++i ) // Оголошуємо змінну 'i' та присвоюємо одиницю, поки 'i' строго менше кількості елементів масиву 'C', додаємо до 'i' одиницю в кінці циклу.
    {
        for (int r=0; r<countC-i; r++) // Оголошуємо змінну 'r' та присвоюємо нуль, поки 'r' строго менше різниці кількості елементів масиву 'C' та зміннoї 'i', додаємо до 'r' одиницю в кінці циклу.
        {
            if (C[r]<C[r+1]) // Якщо значення масиву 'C', відносно 'r', строго менше за значення наступного елементу в масиві 'C', відносно 'r'.
            {
                C[r]=C[r]+C[r+1]; // Значення масиву 'C' приймає значення суми свого значення та наступного в масиві 'C'.
                C[r+1]=C[r]-C[r+1]; // Наступне значення масиву 'C' приймає значення різниці дійсного елементу масиву 'C' та наступного елементу масиву 'C' відповідно.
                C[r]=C[r]-C[r+1]; // Зачення масиву 'C' приймає значення різниці дійсного елементу масиву 'C' та наступного елементу масиву 'C' відповідно.
            }
        }
    }
    cout << "Array C contains only negative elements arranged in descending order.\nSort arrray C:\n"; // Виводимо на консоль символи, нова строка, виводимо на консоль символи, нова строка.
    for (int i=0; i<countC; i++)  // Оголошуємо змінну 'i' та присвоюємо нуль, поки 'i' строго менше кількості елементів масиву 'C', додаємо до 'i' одиницю в кінці циклу.
    {
        if(C[i]<0) // Якщо елемент масиву 'C' строго менш за нуль.
        {
            q++; // До 'q' додаємо один.
            cout << "C[" << q << "] = " << C[i] << "\n"; // Виводимо на консоль символи, виводимо значення 'q', виводимо на консоль символи, виводимо значення масиву 'C' відносно 'i', нова строка.
        }
    }
    q=-1; // 'q' приймає значення мінус один.
    for (int k=0; k<countD; k++) // Оголошуємо змінну 'k' та присвоюємо нуль, поки 'k' строго менше кількості елементів масиву 'D', додаємо до 'k' одиницю в кінці циклу.
    {
        if (k<countA) // Якщо 'k' строго менше кількості елементів у масиві 'A'.
        {
            D[k]=A[k]; // Масив 'D', відносно 'k', приймає значення масиву 'A', відносно 'k'.
        }
        else // Інакше.
        {
            int q=k-countA;  // Оголошуємо змінну 'q', якій надаємо значення різниці 'k' та кількості елементів масиву 'A'. 
            D[k]=B[q]; // Масив 'D', відносно 'k', приймає значення масиву 'B', відносно 'q'.
        }
    }
    for (int i=1; i<countD; ++i) // Оголошуємо змінну 'i' та присвоюємо одиницю, поки 'i' строго менше кількості елементів масиву 'D', додаємо до 'i' одиницю в кінці циклу.
    {
        for (int r=0; r<countD-i; r++) // Оголошуємо змінну 'r' та присвоюємо нуль, поки 'r' строго менше різниці кількості елементів масиву 'D' та зміннoї 'i', додаємо до 'r' одиницю в кінці циклу.
        {
            if (D[r]<D[r+1]) // Якщо значення масиву 'D', відносно 'r', строго більше за значення наступного елементу в масиві 'D', відносно 'r'.
            {
                D[r]=D[r]+D[r+1]; // Значення масиву 'D' приймає значення суми свого значення та наступного в масиві 'D'.
                D[r+1]=D[r]-D[r+1]; // Наступне значення масиву 'C' приймає значення різниці дійсного елементу масиву 'D' та наступного елементу масиву 'D' відповідно.
                D[r]=D[r]-D[r+1]; // Зачення масиву 'D' приймає значення різниці дійсного елементу масиву 'D' та наступного елементу масиву 'D' відповідно.
            }
        }
    }
    cout << "\nArray D accepts even elements arranged in descending order.\nSort arrray D:\n"; // Нова строка, виводимо на консоль символи, нова строка, виводимо на консоль символи, нова строка.
    for (int i=0; i<countD; i++) // Оголошуємо змінну 'i' та присвоюємо нуль, поки 'i' строго менше кількості елементів масиву 'D', додаємо до 'i' одиницю в кінці циклу.
    {   
        if(D[i]%2==0) // Якщо число в масиві непарне.
        {
            q++; // До 'q' додаємо один.
            cout << "D[" << q << "] = " << D[i] << "\n"; // Виводимо на консоль символи, виводимо значення 'q', виводимо на консоль символи, виводимо значення масиву 'D' відносно 'i', нова строка.
        }
    }
    cout << "\nArray E, where E(0) and E(1) are maximum and minimum array elements A; E(2) and E(3) are the maximum and minimum indices elements of array B.\nSort arrray E:\n"; // Нова строка, виводимо на консоль символи, нова строка, виводимо на консоль символи, нова строка.
    int max = A[0]; // Оголошуємо 'max', приймає значення першого елементу масиву 'А'.
    int min = A[0]; // Оголошуємо 'min', приймає значення першого елементу масиву 'А'.
    for (int i = 0; i < N; ++i) // Оголошуємо змінну 'i', яка приймає значення нуль, поки 'i' строго менше 'N' i доки до 'i' додається 1 в кінці циклу. 
    {         
        if ((A[i]) < min) // Якщо значення масиву 'А', відносно 'i', строго менше 'min'.
        min = A[i]; // 'min' приймає значення масиву 'А', відносно 'i'.
        if ((A[i]) > max) // Якщо значення масиву 'А', відносно 'i', строго більше 'max'.
        max = A[i]; // 'max' приймає значення масиву 'А', відносно 'i'.
    }     
    cout << "E[0] = " << max << " - maximum element of array A;\n"; // Виводимо на консоль символи, виводимо на консоль значення 'max', виводимо на консоль символи, нова строка.
    cout << "E[1] = " << min << " - minimum element of array A;\n"; // Виводимо на консоль символи, виводимо на консоль значення 'min', виводимо на консоль символи, нова строка.
    max = 0; // 'max' приймає значення нуль.
    min = 0; // 'min' приймає значення нуль.
    for (int i=0; i<N; i++)  // Оголошуємо змінну 'i', яка приймає значення нуль, поки 'i' строго менше 'N' i доки до 'i' додається 1 в кінці циклу. 
    {
        if (B[i]>B[max]) // Якщо значення масиву 'B', відносно 'i', строго більше за значення масиву 'B', відносно 'max'.
        {
            max = i; // 'max' приймає значення номеру аргументу.
        }
        if (B[i]<B[min]) // Якщо значення масиву 'B', відносно 'i', строго менше за значення масиву 'B', відносно 'min'.
        {
            min = i; // 'min' приймає значення номеру аргументу.
        }
    }
    cout << "E[2] = " << max << " - index of maximum element in array B;\n"; // Виводимо на консоль символи, виводимо на консоль значення 'max', виводимо на консоль символи, нова строка.
    cout << "E[3] = " << min << " - index of minimum element in array B.\n"; // Виводимо на консоль символи, виводимо на консоль значення 'min', виводимо на консоль символи, нова строка.
    for (int i=1; i<countA; ++i ) // Оголошуємо змінну 'i' та присвоюємо одиницю, поки 'i' строго менше кількості елементів масиву 'A', додаємо до 'i' одиницю в кінці циклу.
    {
        for (int r=0; r<countA-i; r++) // Оголошуємо змінну 'r' та присвоюємо нуль, поки 'r' строго менше різниці кількості елементів масиву 'A' та зміннoї 'i', додаємо до 'r' одиницю в кінці циклу.
        {
            if (A[r]>A[r+1]) // Якщо значення масиву 'A' строго більше за значення наступного елементу в масиві 'A'.
            {
                w=0; // 'w'  приймає значення 0.
            }
        }
    }
    if(w==0) // Якщо 'w' дорівнює 0.
    {
        cout << "\n\nThe sequence of elements of array A is not in ascending order."; // Нова строка (двічі), виводимо на консоль символи.
    }
    else // Інакше.
    {
        cout << "\n\nThe sequence of elements of array A is arranged in ascending order."; // Нова строка (двічі), виводимо на консоль символи.
    }
    w=1; // 'w' приймає значення один.
    for (int i=1; i<countB; ++i ) // Оголошуємо змінну 'i' та присвоюємо одиницю, поки 'i' строго менше кількості елементів масиву 'B', додаємо до 'i' одиницю в кінці циклу.
    {
        for (int r=0; r<countB-i; r++) // Оголошуємо змінну 'r' та присвоюємо нуль, поки 'r' строго менше різниці кількості елементів масиву 'B' та зміннoї 'i', додаємо до 'r' одиницю в кінці циклу.
        {
            if (B[r]>B[r+1]) // Якщо значення масиву 'B' більше за значення наступного елементу в масиві 'B'.
            {
                w=0; // 'w' приймає значення нуль.
            }
        }
    }
    if(w==0) // Якщо 'w' дорівнює 0.
    {
        cout << "\n\nThe sequence of elements of array B is not in ascending order.\n\n"; // Нова строка (двічі), виводимо на консоль символи, нова строка (двічі).
    }
    else // Інакше.
    {
        cout << "\n\nThe sequence of elements of array В is arranged in ascending order.\n\n"; // Нова строка (двічі), виводимо на консоль символи, нова строка (двічі).
    }
    return 0; // Без повторень.
}